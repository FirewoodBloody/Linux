#############################################################################
本地班级下载笔记方法:
# firefox ftp://172.40.50.118/course/ENGINEER/   //根据需要有选择下载
远程班级下载笔记方法:
# yum -y install git
# git clone https://github.com/redhatedu/course        //完整下载(第一次使用必须操作)
# cd course
# git pull                                             //更新下载(必须在course目录下执行)
# git checkout 文件名                                  //下载某一个文件(必须在course目录下执行)
#############################################################################

SMB,NFS共享目录

1. iSCSI共享（磁盘共享)internet scsi
做iscsi服务需要三个概念
backstore：后端真正的存储设备(实物)
target:共享名(虚拟)
lun:绑定、关联存储设备
target的共享名有要求[要符合iqn规范]:
iqn.年-月.反转域名:任意字串
如:iqn.2018-02.com.example:data


实验步骤：
	a)在server0上准备一个磁盘分区(vdb1)3G
		# fdisk /dev/vdb
		> n				//新建分区
		> p				//主分区
		>  1				//分区编号
		> 回车			//开始位置
		> +3G			//大小
		> w				//保存退出

	b)安装软件包，修改配置
		# yum -y install targetcli
		# targetcli
		# ls
		# cd /
		# backstores/block create back_store /dev/vdb1	
		//把刚刚分的分区加入后端存储
		# iscsi/ create iqn.2018-02.com.example:data
		//创建一个iscsi共享（共享名称)
注意：创建iscsi共享名时如果提示：
WWN not valid as: iqn, naa, eui，
则说明名称不符合规则
		# iscsi/iqn.2018-02.com.example:data/tpg1/luns create /backstores/block/back_store 
		//把共享名和后端的设备通过lun关联在一起
		#iscsi/iqn.2018-02.com.example:data/tpg1/acls create iqn.2018-02.com.example:desktop0
		//创建了一个访问的口令:iqn.2018-02.com.example:desktop0
		//以后仅知道口令的客户端才可以访问共享
		# iscsi/iqn.2018-02.com.example:data/tpg1/portals create 172.25.0.11
		//以后客户端访问本机的172.25.0.11的3260端口旧可以访问到共享
		# saveconfig
		# exit

		#firewall-cmd --set-default-zone=trusted

		c)客户端访问共享(在desktop操作）
		# lsblk
		# yum -y install iscsi-initiator-utils
		//在实验环境可以跳过，生产环境需要确认
		# vim /etc/iscsi/initiatorname.iscsi
InitiatorName=iqn.2018-02.com.example:desktop0
	//注意在这里给客户端配置访问口令，一定要与服务器的ACL一致
		# man iscsiadm   //找参考命令，在最后
//Ctrl+Shift++放大终端
//Ctrl+-				缩小终端
		# iscsiadm --mode discoverydb --type sendtargets --portal 172.25.0.11 --discover
		//发现对方服务器上的共享
		#iscsiadm --mode node --targetname iqn.2018-02.com.example:data --portal 172.25.0.11:3260 --login
		//挂载172.25.0.11服务器上的共享iqn.2018-02.com.example:data
		//如果挂载提示authentication，口令不对
		# systemctl restart iscsid


++++++++++++++++++++++++++++++++++++++++++
DB(database)数据库：存放数据的地方
DBMS(数据库管理系统）是具体的产品：
如：excel,access,mysql,sql-server,oracle
MySQL AB----->Sun MySQL---->Oralce MySQL
MariaDB==MySQL
RHEL7(内置的数据库是MariaDB)

在server0操作
# yum -y install mariadb-server mairadb
//mariadb-server服务器
//mairadb客户端
//使用客户端软件连接数据库服务器做增，删，改，查操作

# systemctl start mariadb   //启动服务
# mysql
MariaDB [(none)]> show databases;
//查看有哪些数据库(数据库就是目录)
MariaDB [(none)]> use mysql;
//进入数据库(mysql)
MariaDB [mysql]> show tables;
//查看有哪些数据表
MariaDB [mysql]> select * from user;
//查看数据表里的数据
MariaDB [mysql]> exit
//退出数据库系统


# mysqladmin -uroot password '123456'
//给mariadb数据库的管理员root修改密码,密码为123456

# mysql    //直接登陆数据库会失败
# mysql -uroot -p123456  //使用用户与密码登陆

MariaDB [(none)]> create database b;
//创建一个新的数据库，名称为b
MariaDB [(none)]> show databases;
MariaDB [(none)]> drop database b;
//删除某个数据库
MariaDB [(none)]> create database nb;
//提示，你创建的数据库都在/var/lib/mysql目录

MariaDB [(none)]> use nb;
MariaDB [(nb)]>  create table info
->(id int,
->name varchar(10),
->password varchar(20));
//创建一个表,表名是info，这个表有3列
//第1列是id，类型是数字
//第2列是name，类型是字符串,10位
//第3列是password，类型是字符串，20位
MariaDB [(nb)]> describe info;

MariaDB [(nb)]> insert into info values
->(1,'tom','123456');
//往info这个表里查入数据，id号,名字，密码
MariaDB [(nb)]> insert into info values
->(2,'dachui','654321');

MariaDB [nb]> select * from info;
//查看info表的所有数据[表名称为info]
MariaDB [(nb)]> insert into info values
->(3,'jerry','123456'),
->(4,'lucy','123456');
MariaDB [nb]> drop table info;
//删除数据表[表名称为info]
MariaDB [nb]>exit

+++++++++++++++++++++++++++++++++++++++
数据库的备份与还原
# mysqldump -uroot -p123456 nb > my.bak
//把名称为nb的数据库备份，备份到my.bak文件

###备份后可以进入数据库把数据删除(可选操作)####

# mysql -uroot -p123456 nb < my.bak
//使用my.bak这个备份文件，还原名称为nb的数据库
++++++++++++++++++++++++++++++++++++++++

默认mariadb数据库仅有一个账户(root)
创建新的账户
# mysql -u root -p123456
MariaDB [(none)]> grant  all  on  nb.* 
-> to  tom@'localhost' 
-> identified  by  '123456';
//授予tom这个账户，对nb数据库下的所有表的所有权限
//grant all里面的all是所有权限
//可以写具体的指令[select,insert]
//tom@'172.25.0.10'表示tom只能从本机登陆数据库
//identified by设置密码
MariaDB [(none)]>exit
# mysql -u tom -p123456

++++++++++++++++++++++++++++++++++
表记录的操作（表数据的操作）
MariaDB [(none)]> use nb;
MariaDB [(nb)]> select * from info;
//查看表中的所有[info是表名]
MariaDB [(nb)]> select name,password from info;
//仅查看表中的用户和密码信息[不显示id信息]
MariaDB [(nb)]> select * from info 
-> where password='123456'
//查看info表中password是123456的所有数据

MariaDB [(nb)]>update info 
-> set password='123'    //要修改的内容
-> where name='lily';		//条件
//更新info表[info是表名称]
//仅当用户名是lily时才更新她的密码为123

MariaDB [(nb)]>delete from info where id=3;
//where指定条件，当id是3时，把这条数据删除


MariaDB [(nb)]> select * from info 
-> where password='123456' and id=1;
//查看info表中的数据
//条件时密码为123456并且id等于1

多表查询
MariaDB [(nb)]> SELECT count(*) 
-> FROM base,location
-> WHERE base.name="Barbara" AND
-> location.city="Sunnyvale" AND
-> base.id=location.id;










