chmod +r   文件名或目录
chmod +rwx 文件名或目录
chmod u+rw 文件或目录
r：读，w：写，x：执行
r=4,w=2,x=1
rw=6
rwx=7
r-x=5
使用数字修改权限：
#chmod nnn 文件或目录
#chmod 777 文件或目录
#chmod 000 文件或目录
#chmod 077 文件或目录

附加权限：
SUID，SGID，sticky

仅能对程序设置SUID（有效）
/usr/bin/passwd(root root)程序属于root用户
以普通用户去执行这个命令(有SUID的命令),执行该命令时会获得root的权限

在有sticky权限的目录下（仅对目录可以设置）
在这个目录下的任何文件，仅文件所有者可以删除
谁的文件谁删除

suid=4,sgid=2,sticky=1

chmod nnnn  文件或目录
第1个n是特殊权限，第2个n是用户权限
第3个n是组权限，   第4个n是其他人权限
# chmod 7777  文件（结果rwsrwsrwt）
# chmod 1777  文件  (结果rwxrwxrwt)
# chmod 6777  文件（结果rwsrwsrwx)

++++++++++++++++++++++++++++++++++++
历史命令

# history     查看历史
# 上下键盘           调用历史
#  !命令字串         调用最近的历史命令
# !sys
# ！数字			   通过历史命令的编号调用历史命令
# history -c  清空历史命令

#vim +46 /etc/profile
HISTSIZE=1000
默认历史记录是最多1000条

+++++++++++++++++++++++++++++++++++++
ll查看容量仅可以看文件是对的

du命令（查看文件或目录的大小）
# du -sh /boot/
//-s 统计目录的总容量
//-h 人性化显示容量(带单位)

++++++++++++++++++++++++++++++++++++++++
date查看计算机时间

# date
# date +%F				   日期
# date +%R				   时间
# date +%Y%m%d     年月日year,moth,day
# date +%Y:%m:%d
# date +%H:%M:%S		小时分钟秒
# date +%Y-%m-%d %H:%M


# date -s "年-月-日 时:分:秒"       //修改计算机时间
# date -s "11:01"					  //仅修改时间
# date -s "2088-12-1 12:12"


++++++++++++++++++++++++++++++++++++
ln命令（给文件或目录创建快捷方式，链接）
1.软链接
	 软链接不占用空间，但是源文件删除，链接失败
2.硬链接
     硬链接不占用空间，源文件可以删除，链接依然能用

软链接:（注意：做链接一定要用绝对路径）
# echo "123" > /root/123.txt
# ln -s /root/123.txt /abc.txt
给/root/123.txt创建了一个软链接在/abc.txt
# cat /abc.txt    //可以打开
# rm -rf /root/123.txt
# cat /abc.txt			//打不开
# rm -rf /abc.txt   //把没用软链接删除

硬链接:（注意：做链接一定要用绝对路径）
# echo "123" > /root/123.txt
# ln  /root/123.txt /abc.txt
给/root/123.txt创建了一个硬链接在/abc.txt
# cat /abc.txt    //可以打开
# rm -rf /root/123.txt
# cat /abc.txt			  //依然可以不开
# ln /roo/123.txt   /qq.txt
# ln /root/123.txt  /cc.txt

+++++++++++++++++++++++++++++++++++++
查看帮助的方法
# 命令 -h
# 命令 --help
# man 命令
		对man帮助是可以/搜索

+++++++++++++++++++++++++++++++++++
压缩：

linux压缩常用格式:gzip,bz2,zip
windwos压缩:rar(商业),zip

# zip -r  my.zip  /var/log
//把/var/log目录给压缩，压缩到当前目录,my.zip

# unzip my.zip
//把my.zip解压到当前
# unzip my.zip -d /tmp
//把my.zip解压到/tmp
++++++++++++++++++++++++++++++++++

网络yum源

1.自定义yum服务器（真实机操作）
做yum源（yum服务器）【把一堆软件包共享】
	a)需要有RPM软件包
  b)数据库
repodata/          仓库档案数据
	filelists.xml.gz //软件包的文件安装清单
	primary.xml.gz  	//软件包的基本/主要信息
	other.xml.gz  		//软件包的其他信息
	repomd.xml     	//提供.xml.gz下载和校验信息

# mkdir /var/www/html/rhel
# vim /etc/fstab
/iso/rhel-server-7.4-x86_64-dvd.iso /var/www/html/rhel/  iso9660  defaults,loop 0 0
# mount -a
备注：在光盘里有Packages，里面都是RPM包
		repodata目录，里面有相关数据库
# systemctl restart httpd

2.客户端配置repo使用yum源
#vim /etc/yum.repo.d/abc.repo
[abc]
name=redhat
baseurl=http://172.25.0.250/rhel
gpgcheck=0
#yum clean all


++++++++++++++++++++++++++++++++++++


#firefox ftp://172.40.50.118/course/SERVICE/
other.zip和inotify-tools-3.13.tar.gz
#firefox https://github.com/redhatedu/course/

自己从网络上下载的若干软件，把这些软件做成yum源
# unzip other.zip -d /var/www/html/
# ls /var/www/html/other
# createrepo /var/www/html/other
//给/var/www/html/other目录下RPM软件自动生成数据库

客户端配置xx.repo去调用yum源
# vim /etc/yum.repos.d/xx.repo
[xx]
name=redhat
baseurl=http://172.25.0.250/other
gpgcheck=0


+++++++++++++++++++++++++++++++++++++++
vim的三种模式：命令模式，编辑模式，末行模式

命令模式：
		yy		复制一行
		p		粘贴（到光标的下一行）
		P		粘贴（到光标的上一行）
		dd		删除一行
		h,j,k,l(左,下,上,右)
		gg		移动光标到文件头
		G		移动光标到文件尾
		4G		移动光标到第4行
		x		删除光标当前的一个字符
		u		撤销一步
		^		光标跳到行首
		$		光标跳到行尾
		d$		删除到行尾
		d^		删除到行首
		ZZ		保存退出
末行模式
		:4		移动光标到第4行
		:w		保存(不退出）
		:wq	保存退出
		:q!	不保存退出
		:r /etc/passwd   读取其他文件
	  :w /root/tmp.txt  另存为/root/tmp.txt
		:s/旧/新/					旧内容替换为新内容
									   仅替换当前行的第1个内容
		:s/旧/新/	g				旧内容替换为新内容
									   仅替换当前行的所有内容
		:%s/旧/新/				替换所有行的第1个
		:%s/旧/新/g				替换所有行的所有内容
		:3,5s/旧/新/g			替换3到5行的所有内容
		:set nu					显示行号
		:set nonu				不显示行号

+++++++++++++++++++++++++++++++++++++
源码包安装软件

二进制包可以安装软件[rpm,exe,msi,deb...]
源码--->编译--->二进制



Linux的软件多数都免费，开源
二进制包装软的缺点:
（不愿意花时间去封装二进制)
有写开源软件会封装成二进制，但时间会很久
没办法自定义

如何在Linux中源码编译安装软件
1.下载源码包
# firefox ftp://172.40.50.118/course/SERVICE/inotify-tools-3.13.tar.gz

# scp inotify-tools-3.13.tar.gz 172.25.0.11:/root/
//把文件的inotify-tools-3.13.tar.gz拷贝到
172.25.0.11电脑的/root/目录

2.登陆server0使用源码安装软件
# tar -xf inotify-tools-3.13.tar.gz
//解压
#cd inotify-tools-3.13/
//计算机的系统软件一般都是用c语言写的
//如QQ,office,windows,linux,画图,播放器

# ./configure  检查你的计算机环境
# yum -y install gcc
//gcc是linux里面的一个C语言的解释器
# ./configure  检查环境，不报错没有Error
# make
//用gcc解释器把源码转换为二进制
# make install
//把编译好的二进制程序安装到你的计算机

# inotifywait 这个能tab出来（说明成功)

//备注：执行./configure --prefix=/路径
//configure可以通prefix参数，指定安装路径
//如果没有指定prefix，则默认一般在/usr/local/



inotify-tools这个软件可以监控你的计算机目录
# inotifywait -mrq  /root/

再开一个窗口终端，在/root目录做一些操作
#touch /root/tmp.txt
#echo "1" > /root/1.txt
#rm /root/1.txt

++++++++++++++++++++++++++++++++++
systemctl命令

# systemctl -t service
//列出启动的服务
# systemctl -t service --all
//列出所有的服务,包括没启动的

# systemctl stop 服务名称
//当前关闭，重启无效
# systemctl disable 服务名称
//永久关闭
# systemctl enable 服务名称
//开机自启
# systemctl start 服务名称
//当前立刻启动（重启无效）
# systemctl restart 服务名称
//重启服务
# systemctl status 服务名称
//查看某个服务的状态（是否启动）








